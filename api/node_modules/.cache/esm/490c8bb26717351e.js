let getUsersService,createUserService,updateUserService,deleteUserService;_671‍.x([["getUsers",()=>getUsers],["createUser",()=>createUser],["updateUser",()=>updateUser],["deleteUser",()=>deleteUser]]);_671‍.w("../services/userService",[["getUsersService",["getUsersService"],function(v){getUsersService=v}],["createUserService",["createUserService"],function(v){createUserService=v}],["updateUserService",["updateUserService"],function(v){updateUserService=v}],["deleteUserService",["deleteUserService"],function(v){deleteUserService=v}]]);






       const getUsers = async (req, res) => {
  try {
    const users = await getUsersService();
    res.json(users);
  } catch (error) {
    res.status(500).send({ error: "Internal server error" });
  }
};

       const createUser = async (req, res) => {
  const { name, lastName, email, password, phone } = req.body;
  const user = { name, lastName, email, password, phone };
  try {
    const newUser = await createUserService(user);
    res.status(201).json(newUser);
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
};

       const updateUser = async (req, res) => {
  const { id } = req.params;
  const { name, lastName, email, phone } = req.body;
  const user = { name, lastName, email, phone };
  try {
    const updateUser = await updateUserService(id, user);
    res.json(updateUser);
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
};

       const deleteUser = async (req, res) => {
  const { id } = req.params;
  try {
    const deletedUser = await deleteUserService(id);
    if (!deletedUser) {
      return res.status(400).json({ error: "User not found" });
    }
    res.json({ message: "User deleted successfully" });
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
};
