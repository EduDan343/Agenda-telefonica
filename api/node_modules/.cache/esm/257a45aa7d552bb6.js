let User;_7d5‍.x([["getUsersService",()=>getUsersService],["createUserService",()=>createUserService],["updateUserService",()=>updateUserService],["deleteUserService",()=>deleteUserService]]);_7d5‍.w("../models/user",[["User",["User"],function(v){User=v}]]);

       const getUsersService = async () => {
  try {
    const users = await User.find();
    return users;
  } catch (error) {
    throw new Error("Failed to get users");
  }
};

       const createUserService = async (userData) => {
  try {
    const newUser = new User(data);
    newUser.save();
    return newUser;
  } catch (error) {
    throw new Error("Failed to create user");
  }
};

       const updateUserService = async (id, userData) => {
  try {
    const updateUser = await User.findByIdAndUpdate(id, userData, {
      new: true,
    });
    return updateUser;
  } catch (error) {
    throw new Error("Failed to update user");
  }
};

       const deleteUserService = async (id) => {
  try {
    const deleteUser = await User.findByIdAndDelete(id);
    return deleteUser;
  } catch (error) {
    throw new Error("Failed to delete user");
  }
};
